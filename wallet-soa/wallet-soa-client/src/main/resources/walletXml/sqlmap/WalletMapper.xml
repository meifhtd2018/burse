<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="WalletMapper">
	<resultMap id="BaseResultMap" type="com.hnair.consumer.wallet.model.Wallet">
		<id column="wallet_id" property="walletId" jdbcType="BIGINT" />
		<result column="balance" property="balance" jdbcType="DECIMAL" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="app_secret" property="appSecret" jdbcType="VARCHAR" />
		<result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
		<result column="wallet_type" property="walletType" jdbcType="INTEGER" />
		<result column="freeze_amount" property="freezeAmount" jdbcType="DECIMAL" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="disclaimer" property="disclaimer" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Where">
		<if test="walletId != null"> and wallet_id= #{walletId}</if>	
		<if test="balance != null"> and balance= #{balance}</if>	
		<if test="createTime != null"> and create_time= #{createTime}</if>	
		<if test="modifyTime != null"> and modify_time= #{modifyTime}</if>	
		<if test="appSecret != null and appSecret !=''"> and app_secret= #{appSecret}</if>
		<if test="payPassword != null and payPassword !=''"> and pay_password= #{payPassword}</if>
		<if test="walletType != null"> and wallet_type= #{walletType}</if>	
		<if test="freezeAmount != null"> and freeze_amount= #{freezeAmount}</if>	
		<if test="state != null"> and state= #{state}</if>
		<if test="startTime != null and startTime != ''">
			AND DATE_FORMAT(create_time, '%Y-%c-%e')  >=  str_to_date(#{startTime,jdbcType=VARCHAR},'%Y-%c-%e')
		</if>
		<if test="endTime != null and endTime != ''">
			AND DATE_FORMAT(create_time, '%Y-%c-%e')  <![CDATA[<=]]> str_to_date(#{endTime,jdbcType=VARCHAR},'%Y-%c-%e')
		</if>
		<if test="remark != null and remark !=''"> and remark= #{remark}</if>
		<if test="disclaimer != null"> and disclaimer= #{disclaimer}</if>
	</sql>
	<sql id="Base_Column_List">
		wallet_id ,
		balance ,
		create_time ,
		modify_time ,
		app_secret ,
		pay_password ,
		wallet_type ,
		freeze_amount ,
		state ,
		remark ,
		disclaimer
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from wallet
		where
		wallet_id = #{walletId,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from wallet
		where
		wallet_id = #{walletId,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.hnair.consumer.wallet.model.Wallet">
		insert into wallet
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="walletId != null">wallet_id,</if>	
			<if test="balance != null">balance,</if>	
			<if test="createTime != null">create_time,</if>	
			<if test="modifyTime != null">modify_time,</if>	
			<if test="appSecret != null and appSecret !=''">app_secret,</if>
			<if test="payPassword != null and payPassword !=''">pay_password,</if>
			<if test="walletType != null">wallet_type,</if>	
			<if test="freezeAmount != null">freeze_amount,</if>	
			<if test="state != null">state,</if>
			<if test="remark != null and remark !=''">remark,</if>
			<if test="disclaimer != null">disclaimer,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="walletId != null">
				#{walletId,jdbcType=BIGINT},
			</if>
			<if test="balance != null">
				#{balance,jdbcType=DECIMAL},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="appSecret != null and appSecret !=''">
				#{appSecret,jdbcType=VARCHAR},
			</if>
			<if test="payPassword != null and payPassword !=''">
				#{payPassword,jdbcType=VARCHAR},
			</if>
			<if test="walletType != null">
				#{walletType,jdbcType=INTEGER},
			</if>
			<if test="freezeAmount != null">
				#{freezeAmount,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="remark != null and remark !=''">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="disclaimer != null">
				#{disclaimer,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.hnair.consumer.wallet.model.Wallet">
		update wallet
		<set>
			<if test="balance != null">
				balance= #{balance,jdbcType=DECIMAL},
			</if>
			<if test="createTime != null">
				create_time= #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time= #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="appSecret != null and appSecret !=''">
				app_secret= #{appSecret,jdbcType=VARCHAR},
			</if>
			<if test="payPassword != null and payPassword !=''">
				pay_password= #{payPassword,jdbcType=VARCHAR},
			</if>
			<if test="walletType != null">
				wallet_type= #{walletType,jdbcType=INTEGER},
			</if>
			<if test="freezeAmount != null">
				freeze_amount= #{freezeAmount,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				state= #{state,jdbcType=INTEGER},
			</if>
			<if test="remark != null and remark !=''">
				remark= #{remark,jdbcType=VARCHAR},
			</if>
			<if test="disclaimer != null">
				disclaimer= #{disclaimer,jdbcType=INTEGER}
			</if>
		</set>
		where
		wallet_id = #{walletId,jdbcType=BIGINT}
	</update>

	<select id="getAll" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from wallet where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from wallet where 1=1
		<include refid="Base_Where" />
	</select>

	<select id="selectByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from wallet where wallet_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>


	<select id="pageData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from wallet where 1=1
		<include refid="Base_Where" />
		ORDER BY
		create_time DESC
	</select>

</mapper>
